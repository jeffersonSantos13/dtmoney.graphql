input TransactionInput {
    title: String!,
    amount: Float!,
    type: TransactionType!,
    category: String
}

type TransactionResponse {
    id: ID,
    title: String,
    amount: Float,
    type: String,
    category: String
}

type PageInfo {
    page: Int,
    totalCount: Int,
    hasNextPage: Boolean,
    hasPreviousPage: Boolean,
}

type TransactionPageResponse {
    pageInfo: PageInfo,
    transactionResponse: [TransactionResponse]!
}

enum TransactionType {
    DEPOSIT
    WITHDRAW
}

type Query {
    listAllTransactions(page: Int = 0, size: Int = 10): TransactionPageResponse!
}

type Mutation {
    createTransaction(input: TransactionInput): TransactionResponse
}
